// This is an autogenerated file from running `firebase genkit:flow`.
'use server';

/**
 * @fileOverview An AI agent that recommends courses based on student interests and academic history.
 *
 * - recommendCourses - A function that recommends courses to students.
 * - RecommendCoursesInput - The input type for the recommendCourses function.
 * - RecommendCoursesOutput - The return type for the recommendCourses function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RecommendCoursesInputSchema = z.object({
  interests: z
    .string()
    .describe('The interests of the student, comma separated.'),
  academicHistory: z
    .string()
    .describe('The academic history of the student, comma separated.'),
  courses: z
    .string()
    .describe('The courses available, comma separated.'),
});

export type RecommendCoursesInput = z.infer<typeof RecommendCoursesInputSchema>;

const RecommendedCourseSchema = z.object({
  courseName: z.string().describe("The name of a recommended course."),
  reason: z.string().describe("A short, 1-2 sentence explanation of why this course is a good fit for the user based on their input.")
});

const RecommendCoursesOutputSchema = z.object({
  recommendedCourses: z
    .array(RecommendedCourseSchema)
    .describe('The recommended courses for the student, including a reason for each recommendation.'),
});

export type RecommendCoursesOutput = z.infer<typeof RecommendCoursesOutputSchema>;

export async function recommendCourses(input: RecommendCoursesInput): Promise<RecommendCoursesOutput> {
  return recommendCoursesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'recommendCoursesPrompt',
  input: {schema: RecommendCoursesInputSchema},
  output: {schema: RecommendCoursesOutputSchema},
  prompt: `You are an AI assistant that recommends courses to students based on their interests and academic history.

  Student Interests & History: {{{interests}}}
  Available Courses: {{{courses}}}

  Please recommend up to 3 courses that are most relevant to the student's interests and academic history. For each course, provide a short, 1-2 sentence explanation for why you are recommending it, connecting it back to the student's prompt.`,
});

const recommendCoursesFlow = ai.defineFlow(
  {
    name: 'recommendCoursesFlow',
    inputSchema: RecommendCoursesInputSchema,
    outputSchema: RecommendCoursesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
